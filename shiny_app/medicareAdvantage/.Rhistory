shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
install.packages("viridis")
library(viridis)
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
pal <- viridis(n = 10)
pal
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
pal <- colorQuantile(viridis(n=10))
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp()
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp()
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp()
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp()
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
df <- read_excel("./data/enrollment_data.xlsx", sheet = 3, skip = 5)
colnames(df) <- c("Year", "Month", "State", "County", "OriginalMedicare", "MedAdvOther", "MedicareTotal",
"PrescriptionDrug", "MedAdvPresDrug", "PresDrugTotal")
df <- transform(df, OrigMedicare_perc = as.integer(100*OriginalMedicare / MedicareTotal))
df <- transform(df, MedAdvOther_perc = as.integer(100*MedAdvOther / MedicareTotal))
df <- transform(df, MedicareTotal_perc = 100*MedicareTotal / MedicareTotal)
df <- as.data.frame(merge(df, us.map.state, by.x="State", by.y="NAME"))
setwd("C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage/")
df <- read_excel("./data/enrollment_data.xlsx", sheet = 3, skip = 5)
colnames(df) <- c("Year", "Month", "State", "County", "OriginalMedicare", "MedAdvOther", "MedicareTotal",
"PrescriptionDrug", "MedAdvPresDrug", "PresDrugTotal")
df <- transform(df, OrigMedicare_perc = as.integer(100*OriginalMedicare / MedicareTotal))
df <- transform(df, MedAdvOther_perc = as.integer(100*MedAdvOther / MedicareTotal))
df <- transform(df, MedicareTotal_perc = 100*MedicareTotal / MedicareTotal)
df <- as.data.frame(merge(df, us.map.state, by.x="State", by.y="NAME"))
colnames(df)
df %>%
filter(County == 'TOTAL' & State == input$select_state)
df %>%
filter(County == 'TOTAL' & State == "Alabama")
test <- df %>%
filter(County == 'TOTAL' & State == "Alabama")
test
colnames(test)
runApp()
df <- transform(df, OrigMedicare_perc = as.integer(100*OriginalMedicare / MedicareTotal))
df <- transform(df, MedAdvOther_perc = as.integer(100*MedAdvOther / MedicareTotal))
df <- transform(df, MedicareTotal_perc = 100*MedicareTotal / MedicareTotal)
df <- as.data.frame(merge(df, us.map.state, by.x="State", by.y="NAME"))
colnames(df)
df$GEOID.x
runApp()
runApp()
set.seed(111)
mydf <- data.frame(value_1 = sample.int(n = 1000000, size = length(unique(us.map.county$GEOID)), replace = TRUE),
value_2 = sample.int(n = 1000000, size = length(unique(us.map.county$GEOID)), replace = TRUE),
value_3 = sample.int(n = 1000000, size = length(unique(us.map.county$GEOID)), replace = TRUE),
value_4 = sample.int(n = 1000000, size = length(unique(us.map.county$GEOID)), replace = TRUE))
set.seed(111)
mydf <- data.frame(value_1 = sample.int(n = 1000000, size = 100,
value_2 = sample.int(n = 1000000, size = 100),
value_3 = sample.int(n = 1000000, size = 100),
value_4 = sample.int(n = 1000000, size = 100))
set.seed(111)
mydf <- data.frame(value_1 = sample.int(n = 1000000, size = 100),
value_2 = sample.int(n = 1000000, size = 100),
value_3 = sample.int(n = 1000000, size = 100),
value_4 = sample.int(n = 1000000, size = 100))
set.seed(111)
mydf <- data.frame(value_1 = sample.int(n = 1000000, size = 100),
value_2 = sample.int(n = 1000000, size = 100),
value_3 = sample.int(n = 1000000, size = 100),
value_4 = sample.int(n = 1000000, size = 100))
mydf
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
set.seed(111)
mydf <- data.frame(value_1 = sample.int(n = 1000000, size = 100),
value_2 = sample.int(n = 1000000, size = 100),
value_3 = sample.int(n = 1000000, size = 100),
value_4 = sample.int(n = 1000000, size = 100))
mydf
library(reshape2)
length(mydf)
df <- melt(mydf)
colnames(mydf)
df <- read.table(text="    X1  X2  X3  X4  X5  X6  X7  X8  X9  X10
1   5   2   6   0   10  10  3   1   8   9
2   1   2   2   10  1   0   8   2   5   5
3   9   0   0   8   7   9   10  3   3   5
4   10  9   5   6   7   9   0   9   8   6
5   1   4   2   4   3   10  8   0   1   7
6   5   2   10  7   6   0   4   1   8   7
7   10  2   2   1   4   3   2   4   6   2", header=T)
df
mydf
df <- melt(df)
index(mydf)
rownames(mydf)
df <- melt(mydf, id = rownames(mydf))
df <- melt(mydf, id = c("value_1"))
df
df$rowid <- 1:length(df)
df
df
ggplot2(df, aes(value_1, variable, group=factor(rowid))) + geom_line(aes(color=factor(rowid)))
ggplot(df, aes(value_1, variable, group=factor(rowid))) + geom_line(aes(color=factor(rowid)))
row1<-list("a",1,FALSE) #use 'list', not 'c' or 'cbind'!
row2<-list("b",2,TRUE)
df<-data.frame(row1,stringsAsFactors = F) #first row
df<-rbind(d,row2) #now this works as you'd expect.
df
row1<-list("a",1,FALSE) #use 'list', not 'c' or 'cbind'!
row2<-list("b",2,TRUE)
df<-data.frame(row1,stringsAsFactors = F) #first row
df<-rbind(df,row2) #now this works as you'd expect.
df
set.seed(111)
mydf <- data.frame(value_1 = sample.int(n = 1000000, size = 100),
value_2 = sample.int(n = 1000000, size = 100),
value_3 = sample.int(n = 1000000, size = 100),
value_4 = sample.int(n = 1000000, size = 100))
T(mydf)
t(mydf)
mydf <- t(mydf)
melt(mydf)
df <- melt(mydf)
df$rowid <- 1:length(df)
df$rowid <- 1:length(mydf)
df
ggplot2(df, aes(value_1, variable, group=factor(rowid))) + geom_line(aes(color=factor(rowid)))
ggplot(df, aes(value_1, variable, group=factor(rowid))) + geom_line(aes(color=factor(rowid)))
colnames(df)
ggplot(df, aes(Var1, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid)))
