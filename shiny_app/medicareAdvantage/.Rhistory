shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
df_county %>%
filter(State_FIPS == 'AL') %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
test_df <- df_county %>%
filter(State_FIPS == 'AL') %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
test_df
test_df <- df_county %>%
filter(State_FIPS == "AL") %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
test_df
test_df <- df_county %>%
filter(State_FIPS == "AL")# %>%
#group_by(Parent_Organization) %>%
#summarise_if(is.numeric, funs(sum))
test_df
df_county
head(df_county, 5)
df_county <- read_excel("./data/county_payer_stats_t46mo.xlsx")
head(df_county, 5)
df_county <- read_excel("./data/county_payer_stats_t48mo.xlsx")
head(df_county, 5)
df_county <- read_excel("./data/county_payer_stats_t46mo.xlsx")
test_df <- df_county %>%
filter(State_FIPS == "AL")# %>%
#group_by(Parent_Organization) %>%
#summarise_if(is.numeric, funs(sum))
test_df
test_df <- df_county %>%
filter(State_FIPS == "12")# %>%
#group_by(Parent_Organization) %>%
#summarise_if(is.numeric, funs(sum))
test_df
test_df <- df_county %>%
filter(State_FIPS == 12)# %>%
#group_by(Parent_Organization) %>%
#summarise_if(is.numeric, funs(sum))
test_df
df_county <- read_excel("./data/county_payer_stats_t46mo.xlsx")
test_df <- df_county %>%
filter(State_FIPS == '12') %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
test_df
df_county <- read_excel("./data/county_payer_stats_t46mo.xlsx")
head(df_county, 5)
df_county$State_FIPS
test_df <- df_county %>%
filter(State_FIPS == "02") %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
test_df
df_county <- read_excel("./data/county_payer_stats_t48mo.xlsx")
test_df <- df_county %>%
filter(State_FIPS == "02") %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
test_df
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
getwd()
setwd("C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage/")
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
pct_to_number<- function(x){
x_replace_pct<-sub("%", "", x)
x_as_numeric<-as.numeric(x_replace_pct)
}
pct_to_number<- function(x){
x_replace_pct<-sub("%", "", x)
x_as_numeric<-as.numeric(x_replace_pct)
}
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct_to_number(df.eligible$Penetration)
sapply(df.eligible, class)
df.eligible$Penetration
df.eligible$FIPS
df.eligible$FIPS[0]
df.eligible$FIPS
df.eligible$FIPS[1]
len(df.eligible$FIPS[1])
length(df.eligible$FIPS[1])
as.character(df.eligible$FIPS[1])
nchar(as.character(df.eligible$FIPS[1]))
df.eligible$FIPS
df.eligible$FIPS <- as.character(df.eligible$Penetration)
df.eligible$FIPS
df.eligible$FIPS
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct_to_number(df.eligible$Penetration)
sapply(df.eligible, class)
df.eligible
df.eligible$FIPS
df.eligible$FIPS <- as.character(df.eligible$FIPS)
df.eligible$FIPS
df.eligible$FIPS
df.eligible$FIPS[1]
number_to_sting <- function(x){
x <- as.character(x)
if (nchar(x) == 4){
paste0('0500000US0', x)
}
else{
paste0('0500000US', x)
}
}
df.eligible$FIPS[1]
number_to_string(df.eligible$FIPS[1])
number_to_sting <- function(x){
x <- as.character(x)
if (nchar(x) == 4){
paste0('0500000US0', x)
}
else{
paste0('0500000US', x)
}
}
number_to_string(df.eligible$FIPS[1])
number_to_sting(df.eligible$FIPS[1])
number.to.string <- function(x){
x <- as.character(x)
if (nchar(x) == 4){
paste0('0500000US0', x)
}
else{
paste0('0500000US', x)
}
}
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
df.eligible$GEO.id
runApp()
runApp()
merge(us.map.county,
df.eligible[, c("GEO.id", "Eligible", "Population"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
df.eligible
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct_to_number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$Penetration)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
df.eligible
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct_to_number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$Penetration)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
number.to.string <- function(x){
x <- as.character(x)
if (nchar(x) == 4){
paste0('0500000US0', x)
}
else{
paste0('0500000US', x)
}
}
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct_to_number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$Penetration)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
df.eligible
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct_to_number(df.eligible$Penetration)
pct.to.number<- function(x){
x_replace_pct<-sub("%", "", x)
x_as_numeric<-as.numeric(x_replace_pct)
}
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct_to_number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$Penetration)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
df.eligible
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct_to_number(df.eligible$Penetration)
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$Penetration)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
df.eligible
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
df.eligible
df.eligible$Penetration
df.eligible$FIPS
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$FIPS)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
df.eligible
runApp()
merge(us.map.county,
df.eligible[, c("GEO.id", "Eligible", "Population"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
map <- merge(us.map.county,
df.eligible[, c("GEO.id", "Eligible", "Population"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
map
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$FIPS)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
df.eligible %>%
filter(FIPSST == input$state.tab4 & FIPS == input$county.tab4)
df.eligible %>%
filter(FIPSST == 12 & FIPS == 12001)
runApp()
runApp()
df.eligible %>%
filter(FIPSST == input$state.tab4)
df.eligible %>%
filter(FIPSST == 12)
runApp()
df.eligible %>%
filter(FIPSST == 12)
fl <- df.eligible %>%
filter(FIPSST == 12)
fl
merge(us.map.county,
fl[, c("GEO.id", "Eligibles", "Penetration"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
fl_map <- merge(us.map.county,
fl[, c("GEO.id", "Eligibles", "Penetration"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
fl_map
fl_map@data
fl
fl$GEO.id
us.map.county
us.map.county$AFFGEOID
fl
fl$GEO.id
us.map.county$AFFGEOID
fl$GEO.id
us.map.county$AFFGEOID
fl$GEO.id
us.map.county$AFFGEOID
fl$GEO.id
us.map.county$AFFGEOID == "0500000US012133"
which(us.map.county$AFFGEOID == "0500000US012133")
which(us.map.county$AFFGEOID == "0500000US18021")
which(us.map.county$AFFGEOID == "0500000US12133")
number.to.string <- function(x){
x <- as.character(x)
if (nchar(x) == 4){
paste0('0500000US0', x)
}
else{
paste0('0500000US', x)
}
}
number.to.string(12133)
fl$GEO.id
runApp()
runApp()
fl$GEO.id
number.to.string <- function(x){
x <- as.character(x)
if (nchar(x) == 4){
paste0('0500000USO', x)
}
else{
paste0('0500000US', x)
}
}
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$FIPS)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
number.to.string <- function(x){
x <- as.character(x)
if (nchar(x) == 4){
paste0('0500000US0', x)
}
else{
paste0('0500000US', x)
}
}
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$FIPS)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
number.to.string <- function(x){
x <- as.character(x)
ifelse (nchar(x) == 4, paste0('0500000US0', x), paste0('0500000US', x))
}
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$FIPS)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
fl$GEO.id
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$FIPS
df.eligible$FIPS == 12001
which(df.eligible$FIPS == 12001)
df.eligible$FIPS[327]
as.character(df.eligible$FIPS[327])
nchar(as.character(df.eligible$FIPS[327]))
ifelse(nchar(as.character(df.eligible$FIPS[327]))==4, paste0('0500000US0', x), paste0('0500000US', x))
ifelse(nchar(as.character(df.eligible$FIPS[327]))==4, paste0('0500000US0', x), paste0('0500000US', x))
as.character(df.eligible$FIPS[327])
x <- as.character(df.eligible$FIPS[327])
x
ifelse (nchar(x) == 4, paste0('0500000US0', x), paste0('0500000US', x))
number.to.string <- function(x){
Y <- as.character(x)
ifelse (nchar(Y) == 4, paste0('0500000US0', Y), paste0('0500000US', Y))
}
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$FIPS)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
fl_map <- merge(us.map.county,
fl[, c("GEO.id", "Eligibles", "Penetration"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
fl$GEO.id
fl
fl$GEO.id
number.to.string <- function(x){
Y <- as.character(x)
ifelse (nchar(Y) == 4, paste0('0500000US0', Y), paste0('0500000US', Y))
}
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
number.to.string <- function(x){
ifelse (nchar(x) == 4, paste0('0500000US0', x), paste0('0500000US', x))
}
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$FIPS)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
fl <- df.eligible %>%
filter(FIPSST == 12)
fl$GEO.id
fl_map <- merge(us.map.county,
fl[, c("GEO.id", "Eligibles", "Penetration"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
fl_map@data
fl$Eligibles
fl
fl_map@data
fl_map <- merge(us.map.county,
fl[, c("GEO.id", "Eligibles", "Penetration"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
fl_map@data
fl$GEO.id
us.map.county$AFFGEOID
fl$GEO.id
merge(us.map.county,
fl[, c("GEO.id", "Eligibles", "Penetration"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
fl_map <- merge(us.map.county,
fl[, c("GEO.id", "Eligibles", "Penetration"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
fl_map$AFFGEOID
fl_map <- inner_join(us.map.county,
fl[, c("GEO.id", "Eligibles", "Penetration"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
fl_map$AFFGEOID
fl_map@data
fl_map@data[complete.cases(fl_map@data), ]
runApp()
runApp()
fl_map@data
runApp()
runApp()
fl_map
fl_map@data$NAME
runApp()
runApp()
runApp()
ca <- df.eligible %>%
filter(FIPSST == 6)
ca
ca
ca$GEO.id
us.map.county$AFFGEOID == "0500000US06109"
which(us.map.county$AFFGEOID == "0500000US06109")
runApp()
ca$GEO.id
ca_map <- inner_join(us.map.county,
ca[, c("GEO.id", "Eligibles", "Penetration"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
ca_map
ca_map <- merge(us.map.county,
ca[, c("GEO.id", "Eligibles", "Penetration"), drop = TRUE],
by.x = "AFFGEOID",
by.y = "GEO.id")
ca_map
ca_map@data
ca_map@data[complete.cases(ca_map@data), ]
runApp()
us.map.county$GEOID
us.map.county$GEOID == "6001"
which(us.map.county$GEOID == "6001")
which(us.map.county$GEOID == "06001")
runApp()
runApp()
runApp()
pad.fips <- function(x){
if (nchar(x) == 4){paste0('0', x)}
}
pad.fips("6001")
runApp()
runApp()
runApp()
runApp()
runApp()
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
df.eligible$FIPS <- as.character(df.eligible$FIPS)
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
df.eligible$FIPS
df.eligible$FIPS == "6001"
which(df.eligible$FIPS == "6001")
which(df.eligible$FIPS == "06001")
pad.fips(df.eligible$FIPS)
x <- pad.fips(df.eligible$FIPS)
x
which(x == "06001")
runApp()
pad.fips <- function(x){
if (nchar(x) == 4) {
paste0('0', x)}
}
runApp()
runApp()
pad.fips <- function(x){
ifelse (nchar(x) == 4, paste0('0', x), paste0('', x))
}
pad.fips("6001")
pad.fips("06001")
df.eligible <- read_csv("./data/State_County_Penetration_MA_2020_01.csv")
df.eligible$Penetration <- pct.to.number(df.eligible$Penetration)
#df.eligible$FIPS <- as.character(df.eligible$FIPS)
df.eligible$FIPS <- pad.fips(as.character(df.eligible$FIPS))
df.eligible$GEO.id <- number.to.string(df.eligible$FIPS)
df.eligible$FIPS
which(df.eligible$FIPS == "06001")
df.eligible %>%
filter(FIPSST == input$state.tab4)
eligible.unique.fips <- unique(eligible.update$FIPS)
eligible.update <- df.eligible %>%
filter(FIPSST == input$state.tab4)
eligible.update <- df.eligible %>%
filter(FIPSST == 6)
eligible.update
eligible.unique.fips <- unique(eligible.update$FIPS)
eligible.unique.fips
runApp()
runApp()
runApp()
