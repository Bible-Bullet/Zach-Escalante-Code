shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
install.packages("viridis")
library(viridis)
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
pal <- viridis(n = 10)
pal
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
pal <- colorQuantile(viridis(n=10))
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp()
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp()
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp()
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp()
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
#install.packages("ggplot2")
library(ggplot2)
library(reshape2)
set.seed(111)
mydf <- data.frame(value_1 = sample.int(n = 1000000, size = 100),
value_2 = sample.int(n = 1000000, size = 100),
value_3 = sample.int(n = 1000000, size = 100),
value_4 = sample.int(n = 1000000, size = 100))
mydf <- t(mydf)
df <- melt(mydf)
df$rowid <- 1:length(mydf)
colnames(df)
colnames(df)
ggplot(df, aes(Var1, value, group=factor(Var2))) + geom_line(aes(color=factor(Var2)))
ggplot(df, aes(Var2, value, group=factor(Var1))) + geom_line(aes(color=factor(Var1)))
head(df)
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
options(scipen=999)
#County Shape files
# Read in the county shape files
us.map.county <- readOGR(dsn= './cb_2018_us_county_500k', layer = "cb_2018_us_county_500k", stringsAsFactors = FALSE)
# Remove Alaska(2), Hawaii(15), Puerto Rico (72), Guam (66), Virgin Islands (78), American Samoa (60) Mariana Islands (69), Micronesia (64), Marshall Islands (68), Palau (70), Minor Islands (74)
us.map.county <- us.map.county[!us.map.county$STATEFP %in% c("02", "15", "72", "66", "78", "60", "69","64", "68", "70", "74"),]
# Make sure other outling islands are removed.
us.map.county <- us.map.county[!us.map.county$STATEFP %in% c("81", "84", "86", "87", "89", "71", "76","95", "79"),]
simplified_shp <- gSimplify(us.map.county, tol = 0.0125, topologyPreserve = FALSE)
simplified_county <- SpatialPolygonsDataFrame(simplified_shp, data = us.map.county@data)
#format(object.size(simplified), units = "Mb")
#State shape files
us.map.state <- readOGR(dsn= './cb_2018_us_state_500k', layer = "cb_2018_us_state_500k", stringsAsFactors = FALSE)
# Remove Alaska(2), Hawaii(15), Puerto Rico (72), Guam (66), Virgin Islands (78), American Samoa (60) Mariana Islands (69), Micronesia (64), Marshall Islands (68), Palau (70), Minor Islands (74)
us.map.state <- us.map.state[!us.map.state$STATEFP %in% c("02", "15", "72", "66", "78", "60", "69","64", "68", "70", "74"),]
# Make sure other outling islands are removed.
us.map.state <- us.map.state[!us.map.state$STATEFP %in% c("81", "84", "86", "87", "89", "71", "76","95", "79"),]
simplified_shp_v1 <- gSimplify(us.map.state, tol = 0.0001, topologyPreserve = FALSE)
simplified_state <- SpatialPolygonsDataFrame(simplified_shp_v1, data = us.map.state@data)
format(object.size(us.map.state), units = "Mb")
### Create dummy data
set.seed(111)
mydf <- data.frame(place = unique(us.map.county$GEOID),
value_1 = sample.int(n = 1000000, size = length(unique(us.map.county$GEOID)), replace = TRUE),
value_2 = sample.int(n = 1000000, size = length(unique(us.map.county$GEOID)), replace = TRUE),
value_3 = sample.int(n = 1000000, size = length(unique(us.map.county$GEOID)), replace = TRUE),
value_4 = sample.int(n = 1000000, size = length(unique(us.map.county$GEOID)), replace = TRUE))
# Import the monthly enrollment data for all medicare products
# found here https://www.cms.gov/Research-Statistics-Data-and-Systems/Statistics-Trends-and-Reports/CMSProgramStatistics/Downloads/Enrollment_Dashboard_Data_File.zip
df <- read_excel("./data/enrollment_data.xlsx", sheet = 3, skip = 5)
colnames(df) <- c("Year", "Month", "State", "County", "OriginalMedicare", "MedAdvOther", "MedicareTotal",
"PrescriptionDrug", "MedAdvPresDrug", "PresDrugTotal")
df <- transform(df, OrigMedicare_perc = as.integer(100*OriginalMedicare / MedicareTotal))
df <- transform(df, MedAdvOther_perc = as.integer(100*MedAdvOther / MedicareTotal))
df <- transform(df, MedicareTotal_perc = 100*MedicareTotal / MedicareTotal)
df <- as.data.frame(merge(df, us.map.state, by.x="State", by.y="NAME"))
simplified_county
simplified_county$STATEFP
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
which(simplified_county$STATEFP == "06"), ]
simplified_county[which(simplified_county$STATEFP == input$state), ]
simplified_county[which(simplified_county$STATEFP == "06"), ]
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp()
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
colnames(df)
df$Year
df$Month
paste("Year","Month", "01", sep='-')
paste("01","Month", "Year", sep='-')
within(df, Month.Year <- paste("01","Month", "Year", sep='-'))
within(df, Month.Year <- paste("01", Month, Year, sep='-'))
within(df, Month.Year <- paste(Month, Year, sep='-'))
within(df, Month.Year <- as.date(paste(Month, Year, sep='-'), origin="1899-12-30")
)
within(df, Month.Year <- as.Date(paste(Month, Year, sep='-'), origin="1899-12-30"))
within(df, Month.Year <- as.Date(as.character(paste(Month, Year, sep='-')), origin="1899-12-30"))
as.Date("October-2018")
as.Date("October-2018", Origin="1899-12-30")
as.Date("2018-October", Origin="1899-12-30")
as.Date("October 1, 2018", Origin="1899-12-30")
as.Date(paste(df$Year, df$Month, sep="-"), "%Y-%B")
paste(df$Year, df$Month, sep="-")
as.Date(paste(df$Year, df$Month, sep="-"), "%Y-%B")
as.Date(paste(df$Year, df$Month, sep="-"), "%Y-%B-%d")
as.Date("2019-January", "%Y-%B")
as.Date("2019-January-01", "%Y-%B-%d")
as.Date("2019-February-01", "%Y-%B-%d")
test <- as.Date("2019-February-01", "%Y-%B-%d")
typeof(test)
paste(df$Year, df$Month, "01", sep="-")
as.Date("2018-November-01", "%Y-%B-%d")
df$Date <- as.Date(paste(df$Year, df$Month, "01", sep="-"), "%Y-%B-%d")
df$Date
typeof(df$Date)
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
df$Month
df$Year
paste(df$Month, df$Month, sep="-")
paste(df$Month, df$Year, sep="-")
df$Date <- paste(df$Month, df$Year, sep="-")
df$Date
unique(df$Date)
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
df$Date
df[which(df$Date == "May-2019")]
df[which(df$Date == "May-2019"),]
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
shiny::runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
runApp('C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage')
library(DT)
library(rgdal)
library(rgeos)
library(leaflet)
library(viridis)
library(stringr)
library(dplyr)
library(readxl)
library(tidyverse)
library(wesanderson)
getwd()
setwd("C:/Users/NYCZE/Destop/Zach-Escalante-Code/shinyapp/medicareAdvantage")
setwd()
getwd()
setwd("C:/Users/NYCZE/Desktop/Zach-Escalante-Code/shiny_app/medicareAdvantage")
df_county <- read_excel("./data/county_payer_stats_t12mo.xlsx")
df_county
df_county %>%
filter(State_FIPS == input$state.tab3 & FIPS == input$county.tab3) %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
df_county %>%
filter(State_FIPS == "02" & FIPS == "2013") %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
df.county <- df_county %>%
filter(State_FIPS == "02" & FIPS == "2013") %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
df.county
county.data.filter <- df.county %>%
filter(Parent_Organization %in% c("Anthem", "Cigna"))
county.data.filter
shape(county.data.filter)
head(county.data.filter)
county.data.filter <- df.county %>%
filter(Parent_Organization == c("Anthem Inc.", "AvMed, Inc."))
head(county.data.filter)
county.data.filter <- df.county %>%
filter(Parent_Organization %in% c("Anthem Inc.", "AvMed, Inc."))
head(county.data.filter)
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
county.data.melt$variable <- as.Date( as.numeric (as.character(county.data.melt$variable) ),origin="1899-12-30")
library(reshape)
install.packages("reshape")
library(reshape)
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
colnames(county.data.filter)
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
county.data.melt$variable <- as.Date( as.numeric (as.character(county.data.melt$variable) ),origin="1899-12-30")
df_county <- read_excel("./data/county_payer_stats_t12mo.xlsx")
df.county <- df_county %>%
filter(State_FIPS == "02" & FIPS == "2013") %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
county.data.filter <- df.county %>%
filter(Parent_Organization %in% c("Anthem Inc.", "AvMed, Inc."))
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
colnames(county.data.filter)
colnames(county.data.filter)[1]
county.data.melt <- melt(county.data.filter, id=colnames(county.data.filter)[1])
county.data.melt <- melt(county.data.filter, id==colnames(county.data.filter)[1])
county.data.filter
colnames(county.data.filter)[1]
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
library(reshape2)
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
county.data.melt$variable <- as.Date( as.numeric (as.character(county.data.melt$variable) ),origin="1899-12-30")
county.data.melt
q <- ggplot(county.data.melt, aes(variable, value, group = Parent_Organization, color = str_trunc(Parent_Organization, 12, "right"))) +
geom_line()
q
county.melt.pct <- county.data.melt %>%
group_by(Parent_Organization) %>%
mutate(lvar = 100*(lag(value) - value)/lag(value))
county.melt.pct
tail(county.melt.pct)
View(county.melt.pct)
q <- ggplot(county.melt.pct, aes(variable, lvar, group = Parent_Organization, color = str_trunc(Parent_Organization, 12, "right"))) +
geom_line()
q
View(county.data.melt)
View(county.data.filter)
head(county.data.filter)
county.melt.pct
typeof(variable)
typeof(county.melt.pct)
View(county.melt.pct)
county.melt.pct[order(county.melt.pct$variable),]
tail(county.melt.pct[order(county.melt.pct$variable),])
shiny::runApp()
county.melt.pct[order(county.melt.pct$variable),]
county.melt.pct
View(county.data.melt)
df.county <- df_county %>%
filter(State_FIPS == "02" & FIPS == "2013") %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
county.data.filter <- df.county %>%
filter(Parent_Organization %in% c("Anthem Inc.", "AvMed, Inc."))
county.data.filter
View(county.data.filter)
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
county.data.melt$variable <- as.Date( as.numeric (as.character(county.data.melt$variable) ),origin="1899-12-30")
View(county.melt.pct)
View(county.data.melt)
View(county.data.filter)
colnames(county.data.filter)
as.Date(as.numeric("43678"))
as.Date(as.numeric("43678"), origin="1899-12-30")
as.Date(as.numeric("43435"), origin="1899-12-30")
as.Date(as.numeric("43466"), origin="1899-12-30")
View(county.data.melt)
View(county.melt.pct)
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
View(county.data.melt)
county.melt.pct <- county.data.melt %>%
group_by(Parent_Organization) %>%
mutate(lvar = 100*(lag(value) - value)/lag(value))
View(county.melt.pct)
df.county <- df_county %>%
filter(State_FIPS == "02" & FIPS == "2013") %>%
group_by(Parent_Organization) %>%
summarise_if(is.numeric, funs(sum))
county.data.filter <- df.county %>%
filter(Parent_Organization %in% c("Anthem Inc.", "AvMed, Inc.")) %>%
select(-c("FIPS"))
county.data.melt <- melt(county.data.filter, id="Parent_Organization")
county.data.melt$variable <- as.Date( as.numeric (as.character(county.data.melt$variable) ),origin="1899-12-30")
county.melt.pct <- county.data.melt %>%
group_by(Parent_Organization) %>%
mutate(lvar = 100*(lag(value) - value)/lag(value))
View(county.melt.pct)
runApp()
